Python类的编写要点和一般顺序
----------------------------

虽然python中没有强制要求将成员数据或方法设置为私有、公用或保护——都是公有的，但是类似的思想同样也得到了强调[@anayaBianXieZheng2022]：

-  类应该只暴露和外部调用者对象相关的属性和方法
-  内部的方法和属性太多，可能是没有做到良好的抽象一致性，承担的责任太多了，
-  用单个下划线开头界定对象接口（但是属性和方法是没有办法设为私有的）
-  类越小越好，负责的功能专一
-  接口越小越好

一般顺序：

1. 文档字符串
2. 初始化函数

   1. 公开数据属性
   2. 非公开数据属性

3. 公开方法
4. 非公开方法
5. （方法不一定要写在类里边）

.. code:: python

   class Class_name(Object) #Object是构建类时需要继承的基类，可以默认不写
       '''有关类的文档字符串，第一行为简短摘要。

       如果是多行第二行需要有空行
       第二行注释
       ...
       '''
       def __init__(self, arg1, arg2, ...)
           self.arg1 = arg1
           self._arg2 = arg2

       def func1(self)
           print("the class name is {}.".format(self))

注意：

-  始终使用 ``self`` 作为实例方法的第一个参数。
-  始终使用 ``cls`` 作为类方法的第一个参数。
