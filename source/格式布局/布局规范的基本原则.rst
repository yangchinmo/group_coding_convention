布局规范的基本原则
------------------

.. _使用空白和括号的注意事项:
使用空白和括号的注意事项
~~~~~~~~~~~~~~~~~~~~~~~~

空白用于展现结构和增强可读性：

-  空行划分结构。用空行将语句划分成相关的语句组（尤其那些在执行中没有特定顺序要求的语句），相关的语句堆在一起
-  缩进表示从属关系。缩进需要统一规定标准量，涉及到控制结构、折行、子程序参数排布等的缩进都要按照同一个标准量。
-  用两个空行包围类或顶部函数
-  用一个空行包围类内部的方法定义

即使加上括号并没有影响表达式的执行顺序，但是考虑到可读性，仍然推荐使用括号进行划分。

另外，在Python中，标准缩进量使用4个空格，使用 \ ``import`` 导入包时导入组之间用一行空行划分 [Rossum2013]_ 。

单语句
~~~~~~

关于长度限制参照PEP-8中的要求 [Rossum2013]_ ：

-  最长79个字符
-  没有结构话要求的大块文本（注释等）限定在每行72个字符

对于语句中的表达式，使用空格划分，尤其是在运算符附近，对于连续的多个元素，例如子程序参数、数组等，也用空格区分出它们，这里引用PEP-8中的关于空格使用的规范：

-  行尾不要有多余的空格
-  二元运算符两边要有一个空格，
-  优先级不同的表达式中，在优先级低的运算符旁加空格
-  各种括号周围没有空格
-  ``,``\ 、\ ``:``\ 、\ ``;``
   之前没有空格，除了切片中的充当二元运算符的\ ``:``\ 周围要有相同数量的空格
-  连续几行的赋值运算符不要对齐
-  尾随逗号和括号之间没有空格：\ ``foo = (0,)``

单语句秉承“每行只做一件事的原则”：

-  每行只写一条语句
-  每行只声明一个数据
-  Python中每行 ``import`` 只导入一个包

如果有折行，要让这一行明显看起来就和前一行有联系，而不是单独的语句。

-  PEP-8中要求，在Python代码中，可以在二元运算符之前或之后换行，只要约定在本地保持一致即可，规定采用二元运算符之前换行，即把运算符放在行的开头。
-  关于续行的缩进方式：规定使用悬挂缩进，函数的第一行不放参数，并使用标准的缩进量区分出它是续行，具体可参考 :doc:`/子程序/函数的一般编写顺序` 。

块结构
~~~~~~

块结构指的是控制结构中的语句组，一个比较明显的特征是在不同语言中会有相应的关键字或花括号等类似的区分结构用语。而在Python中的控制结构直接使用缩进量表示，缩进的不正确将直接导致语法的错误。鉴于Python的这种特点，块结构的布局规范按照Python的语法要求进行，不需要约定。

类和子程序
~~~~~~~~~~

多个类和子程序使用空行分隔，并按字母顺序排列子程序。

子程序和类的内部的不同部分也使用空行进行分隔，如子程序头部、数据和程序主体，方法定义等，具体划分方法见 :ref:`使用空白和括号的注意事项` ，或PEP-8规范。

在 :doc:`/子程序/函数的一般编写顺序` 的示例中可以看到一种推荐的子程序参数的组织方式。
