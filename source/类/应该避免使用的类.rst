应该避免使用的类
----------------

一个好的类应该做到好的抽象，一些不好的类往往是在“抽象”上做得不好，应该避免以下这些：

-  万能的类：这种类所做到的抽象不够集中，导致其内包含的功能太多，看上去能做的事情非常多，然而这样并不有利于实现良好的抽象，也会阻碍正常的代码复用——考虑将其按功能拆分，拆分出的类应该能用简短的一句话描述其功能。
-  只有数据的类：良好的抽象是表示出一个事物及其和事物相关操作的集合，只有数据不能称作是类——只有一堆数据应该考虑将其纳入其他类中的成员数据部分
-  只有操作的类：同样的，没有数据也不能构成一个良好的抽象——考虑将其变成一个子程序